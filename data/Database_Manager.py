#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
مدیریت دیتابیس برای استان‌ها، شهرها و بانک‌های ایران
این فایل شامل داده‌های ثابت مورد نیاز برای فرم‌ها می‌باشد

نویسنده: سیستم خودکار YARA
تاریخ ایجاد: 2024
نسخه: 2.0

ویژگی‌ها:
- لیست کامل استان‌ها و شهرهای ایران
- لیست بانک‌های فعال ایران
- API برای دسترسی سریع به داده‌ها
"""

import json
import os


class DatabaseManager:
    """کلاس مدیریت دیتابیس داده‌های ثابت"""
    
    def __init__(self):
        self.data_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)))
        self.states_cities_data = self._load_states_cities()
        self.banks_data = self._load_banks()
        
    def _load_states_cities(self):
        """بارگذاری داده‌های استان‌ها و شهرها"""
        return {
            "آذربایجان شرقی": [
                "تبریز", "مراغه", "میانه", "شبستر", "مرند", "جلفا", "آذرشهر", "بناب", 
                "کلیبر", "ملکان", "ورزقان", "هادیشهر", "بستان آباد", "چاراویماق"
            ],
            "آذربایجان غربی": [
                "ارومیه", "خوی", "مهاباد", "بوکان", "میاندوآب", "سلماس", "نقده", 
                "پیرانشهر", "سردشت", "چالدران", "تکاب", "شاهین دژ", "اشنویه"
            ],
            "اردبیل": [
                "اردبیل", "پارس آباد", "خلخال", "مشگین شهر", "گرمی", "بیله سوار", 
                "کوثر", "نمین", "نیر", "سرعین"
            ],
            "اصفهان": [
                "اصفهان", "کاشان", "خمینی شهر", "نجف آباد", "فولادشهر", "لنجان", "مبارکه", 
                "شاهین شهر", "تیران و کرون", "اردستان", "نطنز", "گلپایگان", "خوانسار", 
                "فریدن", "چادگان", "بویین و میاندشت", "سمیرم", "فلاورجان", "دهاقان"
            ],
            "البرز": [
                "کرج", "نظرآباد", "فردیس", "هشتگرد", "ساوجبلاغ", "طالقان", "اشتهارد", 
                "محمدشهر", "مهرشهر", "آسارا", "تنکمان"
            ],
            "ایلام": [
                "ایلام", "دهلران", "آبدانان", "مهران", "ایوان", "ملکشاهی", "شیروان و چرداول", 
                "بدره", "دره شهر", "سرابله"
            ],
            "بوشهر": [
                "بوشهر", "برازجان", "گناوه", "کنگان", "دیلم", "جم", "عسلویه", "خارک", 
                "دیر", "تنگستان", "دشتی", "دشتستان"
            ],
            "تهران": [
                "تهران", "کرج", "اسلامشهر", "قدس", "ورامین", "رباط کریم", "شهریار", 
                "ملارد", "پاکدشت", "دماوند", "فیروزکوه", "بهارستان", "نسیم شهر", 
                "قرچک", "پردیس", "پیشوا", "رودهن"
            ],
            "چهارمحال و بختیاری": [
                "شهرکرد", "بروجن", "لردگان", "فارسان", "اردل", "سامان", "کیان", 
                "گندمان", "بن", "سورشجان"
            ],
            "خراسان جنوبی": [
                "بیرجند", "قائن", "فردوس", "طبس", "سرایان", "نهبندان", "بشرویه", 
                "درمیان", "زیرکوه", "خوسف", "سربیشه"
            ],
            "خراسان رضوی": [
                "مشهد", "نیشابور", "سبزوار", "قوچان", "کاشمر", "گناباد", "تایباد", 
                "خواف", "درگز", "کلات", "چناران", "فریمان", "مه ولات", "بینالود", 
                "تربت حیدریه", "تربت جام", "رشتخوار", "سرخس", "باخرز"
            ],
            "خراسان شمالی": [
                "بجنورد", "شیروان", "اسفراین", "جاجرم", "فاروج", "گرمه", "مانه و سملقان", 
                "راز و جرگلان"
            ],
            "خوزستان": [
                "اهواز", "آبادان", "خرمشهر", "دزفول", "اندیمشک", "شوشتر", "بهبهان", 
                "مسجدسلیمان", "ایذه", "رامهرمز", "شوش", "لالی", "باغ ملک", "کارون", 
                "گتوند", "حمیدیه", "هویزه", "سوسنگرد"
            ],
            "زنجان": [
                "زنجان", "ابهر", "خدابنده", "طارم", "ماه نشان", "سلطانیه", "ایجرود", 
                "خرمدره", "قیدار"
            ],
            "سمنان": [
                "سمنان", "شاهرود", "دامغان", "گرمسار", "آرادان", "میامی", "سرخه", 
                "ایوانکی"
            ],
            "سیستان و بلوچستان": [
                "زاهدان", "زابل", "چابهار", "ایرانشهر", "خاش", "سراوان", "سرباز", 
                "کنارک", "نیکشهر", "دلگان", "قصرقند", "هیرمند", "فنوج", "مهرستان", 
                "بمپور", "میرجاوه"
            ],
            "فارس": [
                "شیراز", "کازرون", "مرودشت", "جهرم", "فیروزآباد", "لار", "داراب", 
                "نی ریز", "اقلید", "زرین دشت", "سپیدان", "فسا", "آباده", "استهبان", 
                "خرم بید", "لامرد", "گراش", "رستم", "قیر و کارزین", "فراشبند", 
                "ممسنی", "سروستان", "پاسارگاد", "بوانات"
            ],
            "قزوین": [
                "قزوین", "البرز", "تاکستان", "بویین زهرا", "آوج", "محمودآباد نمونه"
            ],
            "قم": [
                "قم"
            ],
            "کردستان": [
                "سنندج", "سقز", "بانه", "مریوان", "قروه", "بیجار", "دیواندره", 
                "کامیاران", "دهگلان", "سروآباد"
            ],
            "کرمان": [
                "کرمان", "رفسنجان", "بم", "سیرجان", "جیرفت", "کهنوج", "بردسیر", 
                "زرند", "انار", "شهربابک", "راور", "بافت", "عنبرآباد", "فهرج", 
                "منوجان", "قلعه گنج", "نرماشیر", "ریگان"
            ],
            "کرمانشاه": [
                "کرمانشاه", "اسلام آباد غرب", "پاوه", "جوانرود", "کنگاور", "صحنه", 
                "هرسین", "گیلان غرب", "ثلاث باباجانی", "روانسر", "سنقر", "قصر شیرین", 
                "سومار", "دالاهو"
            ],
            "کهگیلویه و بویراحمد": [
                "یاسوج", "دوگنبدان", "گچساران", "دهدشت", "لیکک", "چرام", "بویراحمد", 
                "کهگیلویه", "باشت"
            ],
            "گلستان": [
                "گرگان", "گنبد کاووس", "علی آباد کتول", "آق قلا", "بندر گز", "کردکوی", 
                "بندر ترکمن", "رامیان", "آزادشهر", "مینودشت", "کلاله"
            ],
            "گیلان": [
                "رشت", "انزلی", "لاهیجان", "لنگرود", "رودسر", "آستارا", "ماسال", 
                "صومعه سرا", "فومن", "شفت", "تالش", "آستانه اشرفیه", "رودبار", 
                "املش", "سیاهکل", "رضوانشهر"
            ],
            "لرستان": [
                "خرم آباد", "بروجرد", "دورود", "کوهدشت", "الیگودرز", "نورآباد", 
                "پل دختر", "ازنا", "دلفان", "سلسله", "چگنی"
            ],
            "مازندران": [
                "ساری", "بابل", "آمل", "قائم شهر", "بابلسر", "بهشهر", "نکا", "نور", 
                "تنکابن", "چالوس", "محمودآباد", "رامسر", "نوشهر", "فریدونکنار", 
                "جویبار", "گلوگاه", "کلاردشت", "عباس آباد", "کیاسر", "سوادکوه", 
                "میاندرود", "سیمرغ"
            ],
            "مرکزی": [
                "اراک", "ساوه", "خمین", "محلات", "دلیجان", "شازند", "کمیجان", 
                "آشتیان", "تفرش", "فراهان", "زرندیه"
            ],
            "هرمزگان": [
                "بندرعباس", "قشم", "کیش", "بندر لنگه", "میناب", "بستک", "جاسک", 
                "رودان", "پارسیان", "حاجی آباد", "ابوموسی", "سیریک", "قشم"
            ],
            "همدان": [
                "همدان", "ملایر", "نهاوند", "تویسرکان", "اسدآباد", "بهار", "کبودرآهنگ", 
                "رزن", "فامنین"
            ],
            "یزد": [
                "یزد", "میبد", "اردکان", "بافق", "تفت", "ابرکوه", "مهریز", "هرات", 
                "خاتم", "اشکذر"
            ]
        }
        
    def _load_banks(self):
        """بارگذاری لیست بانک‌های ایران"""
        return [
            "بانک ملی ایران",
            "بانک صادرات ایران", 
            "بانک تجارت",
            "بانک ملت",
            "بانک کشاورزی",
            "بانک مسکن",
            "بانک صنعت و معدن",
            "بانک رفاه کارگران",
            "بانک توسعه تعاون",
            "بانک پست بانک ایران",
            "بانک اقتصاد نوین",
            "بانک پارسیان",
            "بانک پاسارگاد",
            "بانک کار آفرین",
            "بانک سامان",
            "بانک سینا",
            "بانک سرمایه",
            "بانک تات",
            "بانک دی",
            "بانک ایران زمین",
            "بانک قوامین",
            "بانک حکمت ایرانیان",
            "بانک گردشگری",
            "بانک صنعت ایران",
            "بانک مهر ایران",
            "بانک شهر",
            "بانک مهر اقتصاد",
            "بانک آینده",
            "بانک انصار",
            "بانک رسالت",
            "بانک کوثر",
            "بانک مرکزی جمهوری اسلامی ایران"
        ]
        
    def get_states(self):
        """دریافت لیست استان‌ها"""
        return list(self.states_cities_data.keys())
        
    def get_cities_by_state(self, state):
        """دریافت شهرهای یک استان"""
        return self.states_cities_data.get(state, [])
        
    def get_all_cities(self):
        """دریافت تمام شهرها"""
        all_cities = []
        for cities in self.states_cities_data.values():
            all_cities.extend(cities)
        return sorted(set(all_cities))
        
    def get_banks(self):
        """دریافت لیست بانک‌ها"""
        return self.banks_data.copy()
        
    def search_cities(self, query):
        """جستجوی شهر"""
        query = query.strip().lower()
        results = []
        
        for state, cities in self.states_cities_data.items():
            for city in cities:
                if query in city.lower():
                    results.append({
                        'city': city,
                        'state': state
                    })
                    
        return results
        
    def get_state_by_city(self, city):
        """پیدا کردن استان براساس شهر"""
        city = city.strip()
        
        for state, cities in self.states_cities_data.items():
            if city in cities:
                return state
                
        return None
        
    def validate_state_city(self, state, city):
        """اعتبارسنجی ترکیب استان و شهر"""
        if state not in self.states_cities_data:
            return False
            
        return city in self.states_cities_data[state]
        
    def get_statistics(self):
        """آمار کلی داده‌ها"""
        total_cities = sum(len(cities) for cities in self.states_cities_data.values())
        
        return {
            'total_states': len(self.states_cities_data),
            'total_cities': total_cities,
            'total_banks': len(self.banks_data),
            'average_cities_per_state': round(total_cities / len(self.states_cities_data), 2)
        }
        
    def export_to_json(self, file_path):
        """صادرات داده‌ها به فایل JSON"""
        try:
            data = {
                'states_cities': self.states_cities_data,
                'banks': self.banks_data,
                'metadata': {
                    'version': '2.0',
                    'last_updated': '2024-01-01',
                    'total_states': len(self.states_cities_data),
                    'total_banks': len(self.banks_data)
                }
            }
            
            with open(file_path, 'w', encoding='utf-8') as f:
                json.dump(data, f, ensure_ascii=False, indent=4)
                
            return True
            
        except Exception as e:
            print(f"خطا در صادرات: {str(e)}")
            return False
            
    def import_from_json(self, file_path):
        """واردات داده‌ها از فایل JSON"""
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                data = json.load(f)
                
            if 'states_cities' in data:
                self.states_cities_data = data['states_cities']
                
            if 'banks' in data:
                self.banks_data = data['banks']
                
            return True
            
        except Exception as e:
            print(f"خطا در واردات: {str(e)}")
            return False
            
    def add_city_to_state(self, state, city):
        """اضافه کردن شهر جدید به استان"""
        if state in self.states_cities_data:
            if city not in self.states_cities_data[state]:
                self.states_cities_data[state].append(city)
                self.states_cities_data[state].sort()
                return True
        return False
        
    def remove_city_from_state(self, state, city):
        """حذف شهر از استان"""
        if state in self.states_cities_data:
            if city in self.states_cities_data[state]:
                self.states_cities_data[state].remove(city)
                return True
        return False
        
    def add_bank(self, bank_name):
        """اضافه کردن بانک جدید"""
        if bank_name not in self.banks_data:
            self.banks_data.append(bank_name)
            self.banks_data.sort()
            return True
        return False
        
    def remove_bank(self, bank_name):
        """حذف بانک"""
        if bank_name in self.banks_data:
            self.banks_data.remove(bank_name)
            return True
        return False


# نمونه استفاده
if __name__ == "__main__":
    db = DatabaseManager()
    
    print("آمار دیتابیس:")
    stats = db.get_statistics()
    for key, value in stats.items():
        print(f"{key}: {value}")
    
    print("\nاستان‌ها:")
    for state in db.get_states()[:5]:  # نمایش 5 استان اول
        cities = db.get_cities_by_state(state)
        print(f"{state}: {len(cities)} شهر")
    
    print("\nبانک‌ها:")
    for bank in db.get_banks()[:5]:  # نمایش 5 بانک اول
        print(f"- {bank}")
        
    # تست جستجو
    print(f"\nجستجوی 'تهران': {db.search_cities('تهران')}")
    print(f"استان 'کرج': {db.get_state_by_city('کرج')}")
    print(f"اعتبارسنجی 'تهران-کرج': {db.validate_state_city('تهران', 'کرج')}")